/*=============================================================================
 * TarotClub - DealFile.cpp
 *=============================================================================
 * Manage saving and loading XML files of custom deals
 *=============================================================================
 * TarotClub ( http://www.tarotclub.fr ) - This file is part of TarotClub
 * Copyright (C) 2003-2999 - Anthony Rabine
 * anthony@tarotclub.fr
 *
 * TarotClub is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * TarotClub is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with TarotClub.  If not, see <http://www.gnu.org/licenses/>.
 *
 *=============================================================================
 */

#include "DealFile.h"
#include "defines.h"
#include "TarotDeck.h"

#define DEAL_XML_VERSION  "1.0"

/*****************************************************************************/
DealFile::DealFile()
{

}
/*****************************************************************************/
bool DealFile::LoadFile(QString fileName)
{
    QDomDocument doc;
    QFile f(fileName);

    // Fichier non trouvé, on sort
    if (f.open(QIODevice::ReadOnly) == false)
    {
        return false;
    }
    doc.setContent(&f);
    f.close();

    dogDeck.clear();
    southDeck.clear();
    northDeck.clear();
    westDeck.clear();
    eastDeck.clear();

    // Root element "custom_deal"
    QDomElement root = doc.documentElement();
    if (root.tagName() != "custom_deal")
    {
        return false;
    }

    if (root.attribute("version", "0") != QString(DEAL_XML_VERSION))
    {
        return false;
    }

    // Parsing data
    QDomElement child = root.firstChild().toElement();
    while (!child.isNull())
    {
        // Section "Dog"
        if (child.tagName() == "dog")
        {
            if (FillDeck(dogDeck, child) == false)
            {
                return false;
            }
        }
        else if (child.tagName() == "south")
        {
            if (FillDeck(southDeck, child) == false)
            {
                return false;
            }
        }
        else if (child.tagName() == "north")
        {
            if (FillDeck(northDeck, child) == false)
            {
                return false;
            }
        }
        else if (child.tagName() == "west")
        {
            if (FillDeck(westDeck, child) == false)
            {
                return false;
            }
        }
        else if (child.tagName() == "east")
        {
            if (FillDeck(eastDeck, child) == false)
            {
                return false;
            }
        }
        child = child.nextSibling().toElement();
    }

    return true;
}
/*****************************************************************************/
bool DealFile::FillDeck(Deck &deck, QDomElement &child)
{
    QDomElement subchild = child.firstChild().toElement();
    while (!subchild.isNull())
    {
        int val;
        if (subchild.tagName() == "card")
        {
            val = subchild.text().toInt();
            if (val < 0 || val > 77)
            {
                return false;
            }
            deck.append(TarotDeck::GetCard(val));
        }
        subchild = subchild.nextSibling().toElement();
    }

    return true;
}
/*****************************************************************************/
void DealFile::SaveFile(QString fileName)
{
    // On crée le document
    QDomDocument doc("CustomDeal");

    doc.appendChild(doc.createProcessingInstruction("xml", "version=\"1.0\" encoding=\"UTF-8\""));
    doc.appendChild(doc.createTextNode("\n"));

    doc.appendChild(doc.createComment(QString("Generated by ") + QString("TarotClub ") + QString(TAROT_VERSION)));
    doc.appendChild(doc.createTextNode("\n"));

    // root node
    QDomElement rootNode = doc.createElement("custom_deal");
    rootNode.setAttribute("version", QString(DEAL_XML_VERSION));
    doc.appendChild(rootNode);

    // Cartes du Chien
    QDomElement chienNode = doc.createElement("chien");
    rootNode.appendChild(chienNode);
    for (int i = 0; i < dogDeck.count(); i++)
    {
        QDomElement node = doc.createElement("card");
        node.appendChild(doc.createTextNode(QString().setNum(dogDeck.at(i)->GetId())));
        chienNode.appendChild(node);
    }

    // Cartes Sud
    QDomElement southNode = doc.createElement("south");
    rootNode.appendChild(southNode);
    for (int i = 0; i < southDeck.count(); i++)
    {
        QDomElement node = doc.createElement("card");
        node.appendChild(doc.createTextNode(QString().setNum(southDeck.at(i)->GetId())));
        southNode.appendChild(node);
    }

    // Cartes Ouest
    QDomElement westNode = doc.createElement("west");
    rootNode.appendChild(westNode);
    for (int i = 0; i < westDeck.count(); i++)
    {
        QDomElement node = doc.createElement("card");
        node.appendChild(doc.createTextNode(QString().setNum(westDeck.at(i)->GetId())));
        westNode.appendChild(node);
    }

    // Cartes Nord
    QDomElement northNode = doc.createElement("north");
    rootNode.appendChild(northNode);
    for (int i = 0; i < northDeck.count(); i++)
    {
        QDomElement node = doc.createElement("card");
        node.appendChild(doc.createTextNode(QString().setNum(northDeck.at(i)->GetId())));
        northNode.appendChild(node);
    }

    // Cartes Est
    QDomElement eastNode = doc.createElement("east");
    rootNode.appendChild(eastNode);
    for (int i = 0; i < eastDeck.count(); i++)
    {
        QDomElement node = doc.createElement("card");
        node.appendChild(doc.createTextNode(QString().setNum(eastDeck.at(i)->GetId())));
        eastNode.appendChild(node);
    }

    // Sauvegarde du document DOM en mémoire
    QFile f(fileName);
    if (!f.open(QIODevice::WriteOnly))
    {
        return; // problème de création du fichier
    }

    QString out = doc.toString();

    QTextStream fout(&f);
    fout << out;
    f.close();
}

//=============================================================================
// End of file DealFile.cpp
//=============================================================================
